(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{355:function(t,l,e){t.exports=e.p+"assets/img/MVC.6c1817fd.jpg"},381:function(t,l,e){"use strict";e.r(l);var s=e(43),a=Object(s.a)({},(function(){var t=this,l=t.$createElement,s=t._self._c||l;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"mvc的理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc的理解"}},[t._v("#")]),t._v(" MVC的理解")]),t._v(" "),s("ul",[s("li",[t._v("MVC全名是Model View Controller，是模型(model)－视图(view)－控制器(controller)[肯车了]的缩写")])]),t._v(" "),s("p",[t._v("在MVC设计模式中：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("      Model是指要处理的业务逻辑和数据操作，它接收视图请求的数据并返回最终的处理结果；\n      View视图主要是指的跟用户打交道并且显示给用户看的；\n      Controller看成是Model和View的桥梁，枢纽，响应请求，处理跳转，使模型和视图保持一致。\n")])])]),s("p",[s("img",{attrs:{src:e(355),alt:"Alt text"}})]),t._v(" "),s("p",[t._v("优点：")]),t._v(" "),s("ul",[s("li",[t._v("视图重用。多个视图能共享一个模型。同一个模型可以被不同的视图重用，大大提高了代码的可重用性。")]),t._v(" "),s("li",[t._v("松散耦合。由于MVC的三个模块相互独立，改变其中一个不会影响其他两个，所以依据这种设计思想能构造良好的松耦合的构件。")]),t._v(" "),s("li",[t._v("灵活性。控制器提高了应用程序的灵活性和可配置性。控制器可以用来联接不同的模型和视图去完成用户的需求，这样控制器可以为构造应用程序提供强有力的手段。")])]),t._v(" "),s("p",[t._v("缺点：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("增加了系统结构和实现的复杂性。\n对于简单的界面，严格遵循MVC，使模型、视图与控制器分离，会增加结构的复杂性，并可能产生过多的更新操作，降低运行效率。")])]),t._v(" "),s("li",[s("p",[t._v("视图与控制器间的过于紧密的连接。\n视图与控制器是相互分离，但确实联系紧密的部件，视图没有控制器的存在，其应用是很有限的，反之亦然，这样就妨碍了他们的独立重用。")])]),t._v(" "),s("li",[s("p",[t._v("视图对模型数据的低效率访问。\n依据模型操作接口的不同，视图可能需要多次调用才能获得足够的显示数据。对未变化数据的不必要的频繁访问，也将损害操作性能。")])])])])}),[],!1,null,null,null);l.default=a.exports}}]);